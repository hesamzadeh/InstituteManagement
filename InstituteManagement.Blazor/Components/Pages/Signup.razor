@page "/signup"
@using InstituteManagement.Shared
@using Microsoft.Extensions.Localization
@rendermode InteractiveServer
@inherits SignupBase
@inject IStringLocalizer<Pages.Signup> L
@inject IJSRuntime JSRuntime

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg rounded-3 p-4">
                <h3 class="mb-4 text-center">@L["Signup.FormTitle"]</h3>
                @if (!SignupSuccess)
                {
                    <EditForm EditContext="editContext" OnValidSubmit="HandleSignup">

                        @* First Name *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.FirstName" class="form-control" placeholder="@L["Signup.FirstName"]" />
                            <ValidationMessage For="() => signup.FirstName" />
                        </div>

                        @* Last Name *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.LastName" class="form-control" placeholder="@L["Signup.LastName"]" />
                            <ValidationMessage For="() => signup.LastName" />
                        </div>

                        @* Username *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.UserName"
                                       class="form-control"
                                       placeholder="@L["Signup.UserName"]"
                                       @onblur="CheckUsername" />
                            <ValidationMessage For="() => signup.UserName" />
                            @if (!string.IsNullOrEmpty(usernameStatus))
                            {
                                <div class="small text-muted">@usernameStatus</div>
                            }
                        </div>

                        @* Email *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.Email" class="form-control" placeholder="@L["Signup.Email"]" />
                            <ValidationMessage For="() => signup.Email" />
                        </div>

                        @* Nationality *@
                        <div class="mb-3">
                            <label class="form-label">@L["Signup.Nationality"]</label>
                            <InputSelect @bind-Value="signup.NationalityCode" class="form-select">
                                <option value="">— @L["Signup.SelectNationality"] —</option>
                                @foreach (var nat in NationalityOptions)
                                {
                                    <option value="@nat">@nat.GetDisplayName()</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="() => signup.NationalityCode" />
                        </div>

                        @* National ID *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.NationalId" class="form-control" placeholder="@L["Signup.NationalId"]" />
                            <ValidationMessage For="() => signup.NationalId" />
                        </div>

                        @* Birthdate *@
                        <div class="mb-3">
                            <label class="form-label">@L["Signup.Birthdate"]</label>
                            <input type="text" id="birthdate" class="form-control" />
                            <ValidationMessage For="() => signup.Birthday" />
                        </div>

                        @* Submit *@
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                @if (isSubmitting)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status"></span>
                                    @* &nbsp; *@

                                    @L["Signup.Submitting"]
                                }
                                else
                                {
                                    @L["Signup.SubmitButton"]
                                }
                            </button>
                        </div>
                    </EditForm>
                }                

                @if (!string.IsNullOrEmpty(responseMessage))
                {
                    <div class="mt-3 alert alert-info">@responseMessage</div>
                }
            </div>
        </div>
    </div>
</div>



<!-- your recaptcha scripts here... -->
<script>
    window.getRecaptchaToken = function () {
        return new Promise((resolve, reject) => {
            if (typeof grecaptcha !== 'undefined') {
                grecaptcha.ready(function () {
                    grecaptcha.execute('6LdpWZcrAAAAAHve6fyRO5UIMDPXpZgHQesM0hM3', { action: 'submit' })
                        .then(resolve)
                        .catch(reject);
                });
            } else {
                reject("grecaptcha not loaded");
            }
        });
    };
</script>
<script src="https://www.google.com/recaptcha/api.js?render=6LdpWZcrAAAAAHve6fyRO5UIMDPXpZgHQesM0hM3"></script>
