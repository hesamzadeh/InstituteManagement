@page "/signup"
@using InstituteManagement.Shared
@using Microsoft.Extensions.Localization
@using System.Globalization
@rendermode InteractiveServer
@inherits SignupBase
@inject UiLocalizer L
@inject IJSRuntime JSRuntime

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg rounded-3 p-4">
                <h3 class="mb-4 text-center">@L["FormTitle"]</h3>
                @if (!SignupSuccess)
                {
                    <EditForm EditContext="editContext" OnValidSubmit="HandleSignup">

                        @* First Name *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.FirstName" class="form-control" placeholder="@L["FirstName"]" />
                            <ValidationMessage For="() => signup.FirstName" />
                        </div>

                        @* Last Name *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.LastName" class="form-control" placeholder="@L["LastName"]" />
                            <ValidationMessage For="() => signup.LastName" />
                        </div>

                        @* Username *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.UserName"
                                       class=@($"form-control{(isUsernameTaken ? " is-invalid" : "")}")
                                       placeholder="@L["UserName"]"
                                       @onblur="CheckUsername" />                           
                            <ValidationMessage For="() => signup.UserName" />
                            @if (isUsernameTaken)
                            {
                                <div class="invalid-feedback d-block">@L["UsernameTaken"]</div>
                            }
                        </div>

                        @* Email *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.Email" class="form-control" placeholder="@L["Email"]" />
                            <ValidationMessage For="() => signup.Email" />
                        </div>

                        @* Nationality *@
                        <div class="mb-3">
                            <label class="form-label">@L["Nationality"]</label>
                            <InputSelect @bind-Value="signup.NationalityCode" class="form-select">
                                <option value="">— @L["SelectNationality"] —</option>
                                @foreach (var nat in NationalityOptions)
                                {
                                    <option value="@nat">@nat.GetDisplayName()</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="() => signup.NationalityCode" />
                        </div>

                        @* National ID *@
                        <div class="mb-3">
                            <InputText @bind-Value="signup.NationalId" class="form-control" placeholder="@L["NationalId"]" />
                            <ValidationMessage For="() => signup.NationalId" />
                        </div>

                        @* Birthdate *@
                        <div class="mb-3">
                            <label class="form-label">@L["Birthdate"]</label>
                            <DatePicker @bind-Value="signup.Birthday" Id="birthdate" />
                            <ValidationMessage For="() => signup.Birthday" />
                        </div>

                        @* Submit *@
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
                                @if (isSubmitting)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status"></span>
                                    @* &nbsp; *@

                                    @L["Submitting"]
                                }
                                else
                                {
                                    @L["SubmitButton"]
                                }
                            </button>
                        </div>
                    </EditForm>
                }

                @if (!string.IsNullOrEmpty(responseMessageKey))
                {
                    <div class="mt-3 alert alert-info">@L[responseMessageKey]</div>
                }
                else if (!string.IsNullOrEmpty(responseMessage))
                {
                    <div class="mt-3 alert alert-info">@responseMessage</div>
                }
            </div>
        </div>
    </div>
</div>

