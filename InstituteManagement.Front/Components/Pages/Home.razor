@page "/"
@using InstituteManagement.Shared
@using InstituteManagement.Shared.Enums
@using Microsoft.Extensions.Localization
@inject NavigationManager Nav
@inject HttpClient Http
@inject UiLocalizer L
@code {
    protected override void OnInitialized()
    {
        // Set base name so Ui["AppIntro"] works without specifying file every time
        // L.SetBaseName("Components.Pages.Home");
    }
}

<PageTitle>Home</PageTitle>

<div class="container mt-5">
    <div class="text-center mb-5">
        <h1>@L["AppTitle"]</h1>
        <p>@L["AppIntro"]</p>
    </div>

    <div class="row">
        <!-- Institute Management -->
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <h3>@L["InstituteManagementTitle"]</h3>
                    <p>@L["InstituteManagementDesc"]</p>

                    <button class="btn btn-primary m-1"
                            @onclick="@(() => GoToSignup(ProfileType.Institute_Organization))">
                        @L["RegisterAsOwner"]
                    </button>

                    <button class="btn btn-secondary m-1"
                            @onclick="@(() => GoToSignup(ProfileType.Institute_IndependentTeacher))">
                        @L["RegisterAsIndependentTeacher"]
                    </button>

@*                     <button class="btn btn-outline-secondary m-1"
                            @onclick="@(() => GoToInviteSignup(ProfileType.Institute_Teacher))">
                        @L["RegisterAsInstituteTeacher"]
                    </button>

                    <button class="btn btn-outline-primary m-1"
                            @onclick="@(() => GoToInviteSignup(ProfileType.Institute_Student))">
                        @L["RegisterAsStudent"]
                    </button> *@
                </div>
            </div>
        </div>

        <!-- Gym Management -->
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <h3>@L["GymManagementTitle"]</h3>
                    <p>@L["GymManagementDesc"]</p>

                    <button class="btn btn-primary m-1"
                            @onclick="@(() => GoToSignup(ProfileType.Gym_Organization))">
                        @L["RegisterAsOwner"]
                    </button>

                    <button class="btn btn-secondary m-1"
                            @onclick="@(() => GoToSignup(ProfileType.Gym_IndependentTeacher))">
                        @L["RegisterAsIndependentTrainer"]
                    </button>

@*                     <button class="btn btn-outline-secondary m-1"
                            @onclick="@(() => GoToInviteSignup(ProfileType.Gym_Teacher))">
                        @L["RegisterAsGymTrainer"]
                    </button>

                    <button class="btn btn-outline-primary m-1"
                            @onclick="@(() => GoToInviteSignup(ProfileType.Gym_Student))">
                        @L["RegisterAsMember"]
                    </button> *@
                </div>
            </div>
        </div>
    </div>
</div>

<h3>Gyms</h3>

@if (gyms == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        @foreach (var inst in gyms)
        {
            <div class="col-md-4 mb-3">
                <div class="card shadow-sm">
                    <img src="@inst.LogoUrl" class="card-img-top" alt="@inst.DisplayName" />
                    <div class="card-body">
                        <h5 class="card-title">@inst.DisplayName</h5>
                        <button class="btn btn-primary me-2" @onclick="() => Register(ProfileType.Gym_Teacher, inst.Id)">
                            Register as Teacher
                        </button>
                        <button class="btn btn-secondary" @onclick="() => Register(ProfileType.Gym_Student, inst.Id)">
                            Register as Student
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}
<h3>Institutes</h3>

@if (institutes == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        @foreach (var inst in institutes)
        {
            <div class="col-md-4 mb-3">
                <div class="card shadow-sm">
                    <img src="@inst.LogoUrl" class="card-img-top" alt="@inst.DisplayName" />
                    <div class="card-body">
                        <h5 class="card-title">@inst.DisplayName</h5>
                        <button class="btn btn-primary me-2" @onclick="() => Register(ProfileType.Institute_Teacher, inst.Id)">
                            Register as Teacher
                        </button>
                        <button class="btn btn-secondary" @onclick="() => Register(ProfileType.Institute_Teacher, inst.Id)">
                            Register as Student
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<BusinessDto>? gyms;
    private List<BusinessDto>? institutes;

    protected override async Task OnInitializedAsync()
    {
        gyms = await Http.GetFromJsonAsync<List<BusinessDto>>("api/businesses/gyms");
        institutes = await Http.GetFromJsonAsync<List<BusinessDto>>("api/businesses/institutes");
    }

    private string teacher = "teacher";
    private string student = "student";

    private async Task Register(ProfileType role, Guid id)
    {
        Nav.NavigateTo($"/signup?role={role.ToString()}");

    }

    public class BusinessDto
    {
        public Guid Id { get; set; }
        public string DisplayName { get; set; } = string.Empty;
        public string? LogoUrl { get; set; }
    }
}

@code {
    private void GoToSignup(ProfileType role)
    {
        Nav.NavigateTo($"/signup?role={role.ToString()}");
    }

    private void GoToInviteSignup(ProfileType role)
    {
        // In a real flow, inviteToken would be provided via email or a link
        Nav.NavigateTo($"/signup?role={role.ToString()}&inviteToken=sampleToken123");
    }
}
